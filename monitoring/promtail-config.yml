server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: https://loki.com.ar/loki/api/v1/push
  
scrape_configs:
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          __path__: /var/log/*log

  - job_name: docker
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker_logs
          __path__: /var/lib/docker/containers/*/*-json.log

    pipeline_stages:
      - json:
          expressions:
            log: log
            stream: stream
            # time: time
            compose_project: attrs."com.docker.compose.project"
            compose_service: attrs."com.docker.compose.service"
            compose_cwd: attrs."com.docker.compose.project.working_dir"

      # - regex:
      #   expression: "^/var/lib/docker/containers/(?P<container_id>.{12}).+/.+-json.log$"
      #   source: filename

      - labels:
          stream:
          # container_id:
          compose_project:
          compose_service:
          compose_cwd:

      - docker: {}

      - multiline:
          firstline: "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3}"
          max_wait_time: 3s
          max_lines: 500

      - regex:
          expression: "^(?P<time>\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3}) (?P<message>(?s:.*))$"

      # - replace:
          # expression: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}'
          # expression: "*.([\r\n]+)"
          # replace: ""
          # source: message

      - timestamp:
          source: time
          format: RFC3339Nano


      - output:
          source: message
